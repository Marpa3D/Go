// Функции. Параметры, аргументы и возвращаемые значения
package main

import (
	"fmt"
	"math"
)

// sum - сумма двух целых чисел. a и b - аргументы, входящие значения для вызова функции!
func sum(a, b int) {
	fmt.Printf("sum(): %+v\n", a+b)
}

// Сокращенное обозначение параметров
func f1(a, b int, c, d float64, s string) {
	fmt.Println(a, b, c, d, s)
}

// retValue
func retValue(a float64) float64 {
	return math.Pow(a, a)
}

// Возвращение нескольких значений
func moreValue(a, b int) (int, int) {
	return a + b, a * b
}

// Именнованые возвращаемые значения
func sum1(a, b int) (s int) {
	// Под капотом - s объявляется как var s int
	s = a + b
	return // Nuked return - "голый" возврат
}

func main() {
	// Функция - это блок кода предназначенный для выполнения определенного фрагмента программы,
	// на основании входных значений
	// Автоматически выполняются только функции main() и init()
	// В Go все передается по значению (если не использовать указатели).
	// Значения копируются при передаче их в функцию!
	sum(4, 4)

	// Сокращенное обозначение параметров
	f1(4, 8, 13.4, 19.5, "Привет из функции с сокращенными параметрами!)")

	fmt.Println("Возведение в степень числа a: ", retValue(4.8))

	a, b := moreValue(4, 4)
	fmt.Println(a, b)

	fmt.Println(sum1(22, 8))
}
